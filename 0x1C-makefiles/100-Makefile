# Compiler to be used
CC = gcc

# Source files
SRC = main.c school.c

# Generate object files from source files
OBJ = $(SRC:.c=.o)

# Name of the final executable
NAME = school

# Compiler flags
CFLAGS = -Wall -Werror -Wextra -pedantic

# Specifying unkown targets to ensure they run regardless of whether there's a file
.PHONY: all clean oclean fclean re

# Main target: builds the executable only if m.h is present and recompiles only the updated source files
all: m.h $(OBJ)
	$(CC) $(OBJ) -o $(NAME)

# Deletes all Emacs and Vim temporary files along with the executable
clean:
	$(RM) *~ $(NAME)

# Deletes the object files
oclean:
	$(RM) $(OBJ)

# Deletes all Emacs and Vim temporary files, the executable, and the object files
fclean: clean oclean

# Forces recompilation of all source files
re: fclean all

# Implicit rule to convert .c to .o, adding a dependency on m.h
%.o: %.c m.h
	$(CC) $(CFLAGS) -c $< -o $@
